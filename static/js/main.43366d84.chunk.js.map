{"version":3,"sources":["blockchain/blockchain.js","Routes/Login/Login.js","Routes/Login/index.js","blockchain/api.js","Redux/helpers.js","Redux/lobby/lobby.js","Routes/Lobby/Lobby.js","Routes/Lobby/index.js","Redux/game/game.js","Routes/Game/Game.js","Routes/Game/index.js","Redux/config/config.js","Routes/NodeLocationPrompt/NodeLocationPromp.js","Routes/NodeLocationPrompt/index.js","Routes/index.js","Redux/reducers.js","App.js","Redux/store.js","serviceWorker.js","index.js","blockchain/auth.js"],"names":["blockchain","gtx","init","nodeUri","a","console","log","rest","pcl","restClient","createRestClient","gtxClient","createClient","Buffer","from","query","result","error","getGtx","Login","state","username","privKey","loginPrivKey","updating","register","e","preventDefault","setState","auth","user","isEmpty","alert","login","props","history","push","onFieldChanged","target","name","value","this","Row","className","style","height","Col","paddingBottom","sm","md","lg","xl","Card","CardBody","FormGroup","Label","Input","type","readOnly","placeholder","row","Button","color","tag","Link","to","Form","onSubmit","required","onChange","minWidth","disabled","React","Component","withRouter","lookForGame","isLoggedIn","getCurrentUser","id","pubKey","rq","newTransaction","addOperation","crypto","randomBytes","sign","postAndWaitConfirmation","stopLookingForGame","joinGame","userId","postMessage","gameId","message","getGameStatus","game","PENDING","action","REJECTED","FULFILLED","ACTION_TYPES","initialState","loading","waitList","gameList","sending","isLookingForGame","reducer","payload","wait_list","game_list","some","Lobby","initialized","logout","composeRedirectToGameHandler","findGame","quitFindGame","composeJoinHandler","getLobbyStatus","debounce","prevProps","prevState","currentUser","newGame","find","player_1","player_2","onClick","Table","responsive","borderless","striped","hover","map","waiter","key","moment","timestamp","fromNow","valign","player_1_name","player_2_name","mapDispatchToProps","api","connect","lobby","isWaitingForGameStart","messages","pendingMessages","fulfilledMessages","meta","msg","filter","Game","onMessageChanged","Number","match","params","leaveGame","length","refs","scrollTop","scrollHeight","messagesToShow","maxHeight","background","overflow","ref","wordBreak","author_name","autoComplete","Date","getTime","window","localStorage","setItem","nodeLocation","NodeLocationPrompt","location","success","registerLocation","initializeNodeLocation","cachedLocation","getItem","setNodeLocation","uri","PrivateRoute","component","render","Routes","path","config","combineReducers","reduxStore","createStore","reducers","composeWithReduxDevTools","applyMiddleware","reduxThunk","promiseMiddleware","App","store","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","util","makeKeyPair","toString","privKeyAsText","createPublicKey","pubKeyAsText","user_pubkey"],"mappings":"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","file":"static/js/main.43366d84.chunk.js","sourcesContent":["import pcl from 'postchain-client';\n\nconst blockchain = (function () {\n  let gtx;\n\n  const init = async nodeUri => {\n    try {\n      console.log(nodeUri);\n      const rest = pcl.restClient.createRestClient(nodeUri, '78967baa4768cbcef11c508326ffb13a956689fcb6dc3ba17f4b895cbb1577a3', 5)\n\n      gtx = pcl.gtxClient.createClient(\n        rest,\n        Buffer.from(\n          '78967baa4768cbcef11c508326ffb13a956689fcb6dc3ba17f4b895cbb1577a3',\n          'hex'\n        ),\n        []\n      );\n      const result = await gtx.query('ping', {});\n      console.log('Postchain client initialized.');\n      return result;\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  const getGtx = () => gtx;\n\n  return {\n    init,\n    getGtx\n  }\n})();\n\nexport default blockchain;","import React from 'react';\nimport { Row, Col, Card, CardBody, FormGroup, Form, Button, Input, Label } from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom';\nimport { isEmpty } from 'lodash';\n\nimport auth from '../../blockchain/auth';\n\nclass Login extends React.Component {\n  state = {\n    username: '',\n    privKey: '',\n    loginPrivKey: '',\n    updating: false\n  }\n\n  register = async e => {\n    e.preventDefault();\n    if (!this.state.username) return;\n    this.setState({ updating: true });\n    const user = await auth.register(this.state.username);\n\n    if (isEmpty(user)) alert(\"Operation failed! Please try again.\");\n\n    this.setState({\n      privKey: user.privKey,\n      updating: false\n    });\n  }\n\n  login = async e => {\n    e.preventDefault();\n    if (!this.state.loginPrivKey) return;\n    this.setState({ updating: true });\n    const user = await auth.login(this.state.loginPrivKey);\n\n    if (isEmpty(user)) {\n      alert(\"Unable to login! Invalid privKey or user does not exist.\");\n      this.setState({ updating: false });\n    }\n    else {\n      this.props.history.push('/lobby');\n    }\n  }\n\n  onFieldChanged = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { privKey, username, updating, loginPrivKey } = this.state;\n\n    return (\n      <Row className=\"justify-content-center align-items-center\" style={{ height: '100vh' }}>\n        <Col className=\"m-auto\" style={{ paddingBottom: '20vh' }} sm=\"10\" md=\"6\" lg=\"5\" xl=\"4\">\n          {\n            !privKey ? (\n              <>\n                <h1 className=\"mb-3\">Welcome!</h1>\n                <Form onSubmit={this.login} className=\"row\">\n                  <FormGroup className=\"col mb-0 flex-grow-1\">\n                    <Input type=\"password\" name=\"loginPrivKey\" required placeholder=\"Private Key...\" value={loginPrivKey} onChange={this.onFieldChanged} />\n                  </FormGroup>\n                  <div className=\"col flex-grow-0\" style={{ minWidth: '8em' }}>\n                    <Button className=\"btn-block\" color=\"primary\" type=\"submit\" disabled={updating}>Login</Button>\n                  </div>\n                </Form>\n                <div className=\"text-muted text-center my-3\">-- or --</div>\n                <Form onSubmit={this.register} className=\"row\">\n                  <FormGroup className=\"col mb-0 flex-grow-1\">\n                    <Input type=\"text\" readOnly={privKey} required name=\"username\" placeholder=\"Username...\" value={username} onChange={this.onFieldChanged} />\n                  </FormGroup>\n                  <div className=\"col flex-grow-0\" style={{ minWidth: '8em' }}>\n                    <Button className=\"btn-block\" color=\"primary\" type=\"submit\" disabled={updating}>Register</Button>\n                  </div>\n                </Form>\n              </>)\n              : (\n                <>\n                  <Card>\n                    <CardBody>\n                      <FormGroup>\n                        <Label>Username:</Label>\n                        <Input type=\"text\" readOnly name=\"username\" placeholder=\"Username...\" value={username} />\n                      </FormGroup>\n                      {\n                        privKey && (<>\n                          <FormGroup>\n                            <Label>Private Key (Save this to login):</Label>\n                            <Input type=\"textarea\" name=\"privKey\" row=\"3\" value={privKey} readOnly />\n                          </FormGroup>\n                        </>)\n                      }\n                    </CardBody>\n                  </Card>\n                  <div className=\"d-flex justify-content-center mt-3\">\n                    <Button color=\"primary\" tag={Link} to=\"/lobby\">Let's Play!</Button>\n                  </div>\n                </>\n              )\n          }\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default withRouter(Login);","import Login from './Login';\n\nexport default Login;","import blockchain from './blockchain';\nimport crypto from 'crypto';\nimport auth from './auth';\n\nexport const lookForGame = () => {\n  if (!auth.isLoggedIn()) return false;\n  const { id, privKey, pubKey } = auth.getCurrentUser();\n  const rq = blockchain.getGtx().newTransaction([pubKey]);\n  rq.addOperation(\"look_for_game\", id, crypto.randomBytes(32));\n  rq.sign(privKey, pubKey);\n  return rq.postAndWaitConfirmation();\n}\n\nexport const stopLookingForGame = () => {\n  if (!auth.isLoggedIn()) return false;\n  const { id, privKey, pubKey } = auth.getCurrentUser();\n  const rq = blockchain.getGtx().newTransaction([pubKey]);\n  rq.addOperation(\"stop_looking_for_game\", id, crypto.randomBytes(32));\n  rq.sign(privKey, pubKey);\n  return rq.postAndWaitConfirmation();\n}\n\nexport const joinGame = (userId) => {\n  if (!auth.isLoggedIn()) return false;\n  const { id, privKey, pubKey } = auth.getCurrentUser();\n  const rq = blockchain.getGtx().newTransaction([pubKey]);\n  rq.addOperation(\"join_game\", id, userId, crypto.randomBytes(32));\n  rq.sign(privKey, pubKey);\n  return rq.postAndWaitConfirmation();\n}\n\nexport const getWaitList = () => blockchain.getGtx().query(\"get_wait_list\", {});\n\nexport const getGameList = () => blockchain.getGtx().query(\"get_active_games\", {});\n\nexport const getLobbyStatus = () => blockchain.getGtx().query(\"get_lobby_status\", {});\n\nexport const postMessage = (gameId, message) => {\n  const { id, privKey, pubKey } = auth.getCurrentUser();\n  const rq = blockchain.getGtx().newTransaction([pubKey]);\n  rq.addOperation(\"post_message\", gameId, id, message, crypto.randomBytes(32));\n  rq.sign(privKey, pubKey);\n  return rq.postAndWaitConfirmation();\n}\n\nexport const getGameStatus = (gameId) => {\n  return blockchain.getGtx().query(\"get_game_status\", { game: gameId });\n}","export const PENDING = action => `${action}_PENDING`;\nexport const REJECTED = action => `${action}_REJECTED`;\nexport const FULFILLED = action => `${action}_FULFILLED`;","import * as api from '../../blockchain/api';\nimport auth from '../../blockchain/auth';\nimport {\n  PENDING,\n  REJECTED,\n  FULFILLED\n} from '../helpers';\n\nexport const ACTION_TYPES = {\n  FETCH_STATUS: 'lobby/FETCH_STATUS',\n  LOOK_FOR_GAME: 'lobby/LOOK_FOR_GAME',\n  STOP_LOOKING_FOR_GAME: 'lobby/STOP_LOOKING_FOR_GAME',\n  JOIN_GAME: 'lobby/JOIN_GAME',\n}\n\nexport const lookForGame = () => ({\n  type: ACTION_TYPES.LOOK_FOR_GAME,\n  payload: api.lookForGame()\n})\n\nexport const stopLookingForGame = () => ({\n  type: ACTION_TYPES.STOP_LOOKING_FOR_GAME,\n  payload: api.stopLookingForGame()\n})\n\nexport const joinGame = (userId) => ({\n  type: ACTION_TYPES.JOIN_GAME,\n  payload: api.joinGame(userId)\n})\n\nexport const getLobbyStatus = () => ({\n  type: ACTION_TYPES.FETCH_STATUS,\n  payload: api.getLobbyStatus()\n})\n\nconst initialState = {\n  loading: false,\n  waitList: [],\n  gameList: [],\n  sending: false,\n  isLookingForGame: false,\n  error: null\n}\n\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case PENDING(ACTION_TYPES.FETCH_STATUS):\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FULFILLED(ACTION_TYPES.FETCH_STATUS):\n      const waitList = payload.wait_list;\n      const gameList = payload.game_list;\n      return {\n        ...state,\n        loading: false,\n        waitList,\n        gameList,\n        isLookingForGame: state.sending ? state.isLookingForGame : waitList.some(user => user.id === auth.getCurrentUser().id)\n      };\n    case REJECTED(ACTION_TYPES.FETCH_STATUS):\n      return {\n        ...state,\n        loading: false,\n        error: payload\n      }\n    case PENDING(ACTION_TYPES.LOOK_FOR_GAME):\n      return {\n        ...state,\n        sending: true,\n        isLookingForGame: true,\n        error: null\n      };\n    case PENDING(ACTION_TYPES.STOP_LOOKING_FOR_GAME):\n      return {\n        ...state,\n        sending: true,\n        isLookingForGame: false,\n        error: null\n      };\n    case FULFILLED(ACTION_TYPES.LOOK_FOR_GAME):\n    case FULFILLED(ACTION_TYPES.STOP_LOOKING_FOR_GAME):\n      return {\n        ...state,\n        sending: false\n      };\n    case REJECTED(ACTION_TYPES.LOOK_FOR_GAME):\n    case REJECTED(ACTION_TYPES.STOP_LOOKING_FOR_GAME):\n      return {\n        ...state,\n        sending: false,\n        isLookingForGame: state.waitList.some(user => user.id === auth.getCurrentUser().id),\n        error: payload\n      }\n    case PENDING(ACTION_TYPES.JOIN_GAME):\n      return {\n        ...state,\n        sending: true,\n        error: null\n      };\n    case REJECTED(ACTION_TYPES.JOIN_GAME):\n      return {\n        ...state,\n        sending: false,\n        error: payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Table, Row, Col, Card, CardBody } from 'reactstrap';\n\nimport { getLobbyStatus, lookForGame, stopLookingForGame, joinGame } from '../../Redux/lobby/lobby';\nimport auth from '../../blockchain/auth';\nimport moment from 'moment';\nimport debounce from 'debounce';\n\nclass Lobby extends React.Component {\n  state = {\n    initialized: false\n  }\n\n  componentDidMount() {\n    this.getLobbyStatus = debounce(this.props.getLobbyStatus, 1000);\n    this.getLobbyStatus();\n  }\n\n  componentWillUnmount() {\n    if (this.props.isLookingForGame) this.props.stopLookingForGame();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.loading && !this.props.loading) {\n      if (!this.state.initialized) this.setState({ initialized: true });\n      this.getLobbyStatus();\n    }\n\n    const { currentUser, gameList } = this.props;\n    if (prevProps.gameList !== gameList) {\n      const newGame = gameList.find(game => game.player_1 === currentUser.id || game.player_2 === currentUser.id);\n      if (newGame) this.props.history.push(`/game/${newGame.id}`);\n    }\n  }\n\n  logout = () => {\n    auth.logout();\n    this.props.history.push('/');\n  }\n\n  composeRedirectToGameHandler = gameId => () => this.props.history.push(`/game/${gameId}`);\n\n  findGame = () => this.props.lookForGame();\n  quitFindGame = () => this.props.stopLookingForGame();\n  composeJoinHandler = userId => () => this.props.joinGame(userId);\n\n  render() {\n    const { waitList, gameList, currentUser, isLookingForGame, sending } = this.props;\n    return (\n      <>\n        <div className=\"d-flex justify-content-between align-items-end py-4\">\n          <div>\n            {\n              this.state.initialized && (\n                isLookingForGame ? (\n                  <Button\n                    color=\"outline-danger\"\n                    onClick={this.quitFindGame}\n                    disabled={sending}>\n                    Stop Finding\n              </Button>\n                ) : (\n                    <Button\n                      color=\"primary\"\n                      onClick={this.findGame}\n                      disabled={sending}>\n                      Find Game\n                </Button>\n                  )\n              )\n            }\n          </div>\n          <div className=\"d-flex align-items-baseline\">\n            <div>Welcome, {currentUser.username}!</div>\n            <Button\n              color=\"outline-danger\"\n              className=\"ml-3\"\n              onClick={this.logout}>\n              Logout\n            </Button>\n          </div>\n        </div>\n        <Row>\n          <Col lg=\"6\" className=\"mb-3 mb-lg-0\">\n            <Card style={{ height: '100%' }}>\n              <CardBody>\n                <h4>Wait List</h4>\n                <hr />\n                <Table responsive borderless striped hover>\n                  <tbody>\n                    {waitList.map(waiter => <tr key={waiter.id}>\n                      <td>{moment(waiter.timestamp).fromNow()}</td>\n                      <td valign=\"middle\">{waiter.username}</td>\n                      <td className=\"text-right\">{waiter.id !== currentUser.id && <Button color=\"outline-primary\" onClick={this.composeJoinHandler(waiter.id)}>Join</Button>} </td>\n                    </tr>)}\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"6\">\n            <Card style={{ height: '100%' }}>\n              <CardBody>\n                <h4>Active Games</h4>\n                <hr />\n                <Table responsive borderless striped hover>\n                  <tbody>\n                    {gameList.map(game => <tr key={game.id}>\n                      <td>{moment(game.timestamp).fromNow()}</td>\n                      <td>{game.player_1_name}</td>\n                      <td valign=\"middle\">{game.player_2_name}</td>\n                      <td className=\"text-right\">\n                        {\n                          game.player_1 !== currentUser.id && game.player_2 !== currentUser.id\n                            ? <Button color=\"outline-primary\" onClick={this.composeRedirectToGameHandler(game.id)}>Spectate</Button>\n                            : <Button color=\"primary\" onClick={this.composeRedirectToGameHandler(game.id)}>Play</Button>\n                        } </td>\n                    </tr>)}\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  getLobbyStatus,\n  lookForGame,\n  stopLookingForGame,\n  joinGame\n}\nconst mapAppStateToProps = ({ lobby }) => {\n  const { loading, waitList, gameList, sending, isLookingForGame, isWaitingForGameStart, error } = lobby;\n  return {\n    loading,\n    sending,\n    waitList,\n    gameList,\n    isWaitingForGameStart,\n    isLookingForGame,\n    error,\n    currentUser: auth.getCurrentUser()\n  }\n}\n\nexport default withRouter(connect(mapAppStateToProps, mapDispatchToProps)(Lobby));","import Lobby from './Lobby';\n\nexport default Lobby;","import * as api from '../../blockchain/api';\nimport auth from '../../blockchain/auth';\nimport {\n  PENDING,\n  REJECTED,\n  FULFILLED\n} from '../helpers';\n\nexport const ACTION_TYPES = {\n  FETCH_STATUS: 'game/FETCH_STATUS',\n  POST_MESSAGE: 'game/POST_MESSAGE'\n}\n\nexport const getGameStatus = gameId => ({\n  type: ACTION_TYPES.FETCH_STATUS,\n  payload: api.getGameStatus(gameId)\n})\n\nexport const postMessage = (gameId, message) => ({\n  type: ACTION_TYPES.POST_MESSAGE,\n  payload: api.postMessage(gameId, message),\n  meta: {\n    msg: {\n      author_name: auth.getCurrentUser().username,\n      message,\n      timestamp: new Date().getTime()\n    }\n  }\n})\n\nconst initialState = {\n  loading: false,\n  messages: [],\n  game: {},\n  pendingMessages: [],\n  fulfilledMessages: [],\n  sending: false,\n  error: null\n}\n\n\nconst reducer = (state = initialState, { type, payload, meta }) => {\n  switch (type) {\n    case PENDING(ACTION_TYPES.FETCH_STATUS):\n      return {\n        ...state,\n        loading: true,\n        error: null\n      }\n    case FULFILLED(ACTION_TYPES.FETCH_STATUS):\n      return {\n        ...state,\n        loading: false,\n        game: payload.game,\n        messages: payload.messages,\n        fulfilledMessages: []\n      }\n    case REJECTED(ACTION_TYPES.FETCH_STATUS):\n      return {\n        ...state,\n        loading: false,\n        error: payload\n      }\n    case PENDING(ACTION_TYPES.POST_MESSAGE):\n      return {\n        ...state,\n        sending: true,\n        error: null,\n        pendingMessages: [...state.pendingMessages, meta.msg]\n      }\n    case FULFILLED(ACTION_TYPES.POST_MESSAGE):\n      return {\n        ...state,\n        sending: false,\n        pendingMessages: state.pendingMessages.filter(msg => msg.message !== meta.msg.message),\n        fulfilledMessages: [...state.fulfilledMessages, meta.msg]\n      }\n    case REJECTED(ACTION_TYPES.POST_MESSAGE):\n      return {\n        ...state,\n        sending: false,\n        pendingMessages: state.pendingMessages.filter(msg => msg.message !== meta.msg.message),\n        error: payload\n      }\n    default: return state;\n  }\n}\n\nexport default reducer;","import React from 'react';\nimport { Row, Col, Form, Input, Button } from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\nimport moment from 'moment';\nimport debounce from 'debounce';\nimport { connect } from 'react-redux';\nimport { isEmpty } from 'lodash';\n\nimport { getGameStatus, postMessage } from '../../Redux/game/game';\nimport auth from '../../blockchain/auth';\n\nclass Game extends React.Component {\n  state = {\n    message: ''\n  }\n\n  componentDidMount() {\n    const gameId = Number(this.props.match.params.gameId);\n    this.getGameStatus = debounce(() => this.props.getGameStatus(gameId), 500);\n    this.getGameStatus();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.loading && !this.props.loading) {\n      this.getGameStatus();\n      if (prevProps.messages.length === 0) this.refs.messages.scrollTop = this.refs.messages.scrollHeight;\n    }\n  }\n\n  onMessageChanged = e => this.setState({\n    message: e.target.value\n  })\n\n  postMessage = e => {\n    e.preventDefault();\n    this.props.postMessage(Number(this.props.match.params.gameId), this.state.message);\n    this.setState({ message: '' });\n  }\n\n  leaveGame = () => this.props.history.push('/lobby')\n\n  render() {\n    const { messages, fulfilledMessages, pendingMessages, game } = this.props;\n    const messagesToShow = [...messages, ...fulfilledMessages, ...pendingMessages];\n    const currentUser = auth.getCurrentUser();\n\n    return (\n      <Row style={{ height: '100vh' }}>\n        <Col lg=\"9\" className=\"py-3\">\n\n        </Col>\n        <Col lg=\"3\" className=\"d-flex flex-column justify-content-end py-3 col-lg-3\" style={{ maxHeight: '100%', background: 'rgba(0,0,0,0.2)' }}>\n          <div className=\"flex-grow-0 d-flex justify-content-between mb-3\">\n            {\n              !isEmpty(game) && (\n                game.player_1 !== currentUser.id && game.player_2 !== currentUser.id\n                  ? (\n                    <Button color=\"outline-danger\" onClick={this.leaveGame}>\n                      Leave Game\n                  </Button>\n                  )\n                  : (\n                    <Button color=\"outline-danger\">\n                      Resign\n                  </Button>\n                  )\n              )\n            }\n\n          </div>\n          <div className=\"flex-grow-1 d-flex flex-column justify-content-end\" style={{ overflow: 'hidden' }}>\n            <div style={{ overflow: 'auto' }} ref=\"messages\">\n              {\n                messagesToShow.length > 0\n                  ? messagesToShow.map(message => (\n                    <p\n                      style={{\n                        wordBreak: 'break-word'\n                      }}\n                      key={message.timestamp}>\n                      <b className={message.author_name === currentUser.username ? 'text-primary' : 'text-secondary'}>[{moment(message.timestamp).fromNow()}] {message.author_name}</b>:<br />{message.message}\n                    </p>\n                  ))\n                  : <div className=\"text-muted\">Say something nice e.g. \"Good game, have fun!\"</div>\n              }\n            </div>\n          </div>\n          <Form className=\"flex-grow-0 mt-3\" onSubmit={this.postMessage}>\n            <Input type=\"text\" autoComplete=\"message\" value={this.state.message} onChange={this.onMessageChanged} />\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapDispatchToProps = { getGameStatus, postMessage };\nconst mapAppStateToProps = ({ game }) => {\n  const { loading, messages, pendingMessages, fulfilledMessages, game: gameInfo } = game;\n  return {\n    loading,\n    game: gameInfo,\n    messages,\n    fulfilledMessages,\n    pendingMessages\n  }\n}\n\nexport default withRouter(connect(mapAppStateToProps, mapDispatchToProps)(Game));","import Game from './Game';\n\nexport default Game;","export const ACTION_TYPES = {\n  SET_NODE_LOCATION: 'config/SET_NODE_LOCATION'\n}\n\nexport const setNodeLocation = uri => ({\n  type: ACTION_TYPES.SET_NODE_LOCATION,\n  payload: uri\n});\n\n\nconst reducer = (state = {}, { type, payload, ...others }) => {\n  switch (type) {\n    case ACTION_TYPES.SET_NODE_LOCATION:\n      window.localStorage.setItem('nodeLocation', payload);\n      return {\n        ...state,\n        nodeLocation: payload\n      }\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","import React from 'react';\nimport { Row, Col, Card, CardBody, Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\nimport blockchain from '../../blockchain/blockchain';\nimport { setNodeLocation } from '../../Redux/config/config';\nimport { connect } from 'react-redux';\n\nclass NodeLocationPrompt extends React.Component {\n  state = {\n    location: '',\n    loading: false,\n    success: true,\n  }\n\n  componentDidMount() {\n    const cachedLocation = window.localStorage.getItem('nodeLocation', '');\n    if (cachedLocation) {\n      this.setState({ location: cachedLocation }, this.initializeNodeLocation);\n    }\n  }\n\n  async initializeNodeLocation() {\n    this.setState({ loading: true, success: true });\n    const result = await blockchain.init(this.state.location);\n    if (result === \"pong\") {\n      this.props.setNodeLocation(this.state.location);\n    }\n    else {\n      this.setState({ loading: false, success: false });\n    }\n  }\n\n  registerLocation = e => {\n    e.preventDefault();\n    if (!this.state.location) return;\n    this.initializeNodeLocation();\n  }\n\n  onFieldChanged = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { location } = this.state;\n\n    return (\n      <Row className=\"justify-content-center align-items-center\" style={{ height: '100vh' }}>\n        <Col className=\"m-auto\" style={{ paddingBottom: '20vh' }} sm=\"10\" md=\"6\" lg=\"5\" xl=\"4\">\n          <Card>\n            <CardBody>\n              {\n                this.state.loading ? (\n                  <div>Testing connection, please wait...</div>\n                ) : (\n                    <Form onSubmit={this.registerLocation}>\n                      <FormGroup>\n                        {!this.state.success && <div className=\"color-danger\">Cannot connect to server!</div>}\n                        <Label>Please enter node location:</Label>\n                        <Input type=\"text\" name=\"location\" placeholder=\"https://try.chromia.dev/node/#####/\" value={location} onChange={this.onFieldChanged} />\n                      </FormGroup>\n                      <div className=\"d-flex justify-content-end\">\n                        <Button color=\"primary\" type=\"submit\">Connect</Button>\n                      </div>\n                    </Form>\n                  )\n              }\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  setNodeLocation\n}\n\nexport default connect(null, mapDispatchToProps)(NodeLocationPrompt);","import NodeLocationPrompt from './NodeLocationPromp';\n\nexport default NodeLocationPrompt;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nimport auth from '../blockchain/auth';\nimport Login from './Login';\nimport Lobby from './Lobby';\nimport Game from './Game';\nimport NodeLocationPrompt from './NodeLocationPrompt';\n\nexport const PrivateRoute = ({ component: Component, ...props }) => (\n  <Route {...props} render={() => (\n    auth.isLoggedIn() ? <Component {...props} /> : <Redirect to=\"/\" />\n  )} />\n)\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <Router>\n        {\n          this.props.nodeLocation\n            ? (\n              <Switch>\n                <PrivateRoute path=\"/lobby\" component={Lobby} />\n                <PrivateRoute path=\"/game/:gameId\" component={Game} />\n                <Route path=\"/\">\n                  <Login />\n                </Route>\n              </Switch>\n            )\n            : <NodeLocationPrompt />\n        }\n\n      </Router>\n    );\n  }\n}\n\nconst mapAppStateToProps = ({ config }) => ({ nodeLocation: config.nodeLocation });\n\nexport default connect(mapAppStateToProps)(Routes);","import { combineReducers } from \"redux\";\nimport config from \"./config/config\";\nimport lobby from './lobby/lobby';\nimport game from './game/game';\n\nexport default combineReducers({\n  config,\n  lobby,\n  game\n});\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Provider as ReduxProvider } from \"react-redux\";\n\nimport Routes from './Routes/';\nimport { createReduxStore } from './Redux/store';\n\nconst reduxStore = createReduxStore();\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <ReduxProvider store={reduxStore}>\n          <Routes />\n        </ReduxProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { composeWithDevTools as composeWithReduxDevTools } from \"redux-devtools-extension\";\nimport reduxThunk from \"redux-thunk\";\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { createStore, applyMiddleware } from \"redux\";\n\nimport reducers from \"./reducers\";\n\nexport const createReduxStore = () => {\n  return createStore(\n    reducers,\n    {},\n    composeWithReduxDevTools(\n      applyMiddleware(reduxThunk, promiseMiddleware)\n    )\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import pcl from 'postchain-client';\n\nimport blockchain from './blockchain';\n\nconst auth = (function () {\n  let currentUser = {};\n\n  const register = async username => {\n    try {\n      const user = pcl.util.makeKeyPair();\n      const { pubKey, privKey } = user;\n      const rq = blockchain.getGtx().newTransaction([pubKey]);\n      rq.addOperation('register', pubKey, username);\n      rq.sign(privKey, pubKey);\n\n      await rq.postAndWaitConfirmation();\n\n      return await login(privKey.toString('hex'));\n    } catch (e) {\n      console.error(e);\n      return {};\n    }\n  }\n\n  const login = async privKeyAsText => {\n    try {\n      const privKey = Buffer.from(privKeyAsText, 'hex');\n      const pubKey = pcl.util.createPublicKey(privKey);\n      const pubKeyAsText = pubKey.toString('hex');\n      const { id, username } = await blockchain.getGtx().query(\"get_user\", {\n        user_pubkey: pubKeyAsText\n      });\n\n      currentUser = {\n        id,\n        username,\n        pubKey,\n        privKey\n      };\n\n      return {\n        username,\n        pubKey: pubKeyAsText,\n        privKey: privKeyAsText\n      };\n    } catch (e) {\n      console.error(e);\n      return {};\n    }\n  }\n\n  const logout = () => {\n    currentUser = {};\n  }\n\n  const isLoggedIn = () => !!currentUser.privKey;\n\n  const getCurrentUser = () => ({ ...currentUser });\n\n  return {\n    register,\n    login,\n    logout,\n    isLoggedIn,\n    getCurrentUser\n  }\n})();\n\nexport default auth;\n\n// a84ba12f68fdc87bed89c115d58bec19923a1583eca3a5099177731904afd120\n// e2230041ff0d190f61e85e3ae33c256aa442b52fa41d6c5cc1dead84b8671db0"],"sourceRoot":""}